# 在只使用Bukkit的情况下,配置文件中的bungeecord应当为false。 当bungeecord为false的情况下,FC会选择性的禁用一些功能。
bungeecord: false

# +----------------------------------------------------------------------------------------------+ #
# |                                                                                              | #
# |                                       STORAGE SETTINGS                                       | #
# |                                                                                              | #
# |                Controls which storage method FloraCore will use to store data.               | #
# |                                                                                              | #
# +----------------------------------------------------------------------------------------------+ #
#
# - Possible options:
#
#   |  Remote databases - require connection information to be configured below
#   |=> MySQL
#   |=> MariaDB (preferred over MySQL)
#   |=> PostgreSQL
#   |=> MongoDB
#
#   |  Flat file/local database - don't require any extra configuration
#   |=> H2 (preferred over SQLite)
#   |=> SQLite
#
# - A H2 database is the default option.
storage-method: H2

# The following block defines the settings for remote database storage methods.
#
# - You don't need to touch any of the settings here if you're using a local storage method!
# - The connection detail options are shared between all remote storage types.
data:

  # Define the address and port for the database.
  # - The standard DB engine port is used by default
  #   (MySQL: 3306, PostgreSQL: 5432, MongoDB: 27017)
  # - Specify as "host:port" if differs
  address: localhost

  # The name of the database to store FloraCore data in.
  # - This must be created already. Don't worry about this setting if you're using MongoDB.
  database: minecraft

  # Credentials for the database.
  username: root
  password: ''

  # These settings apply to the MySQL connection pool.
  # - The default values will be suitable for the majority of users.
  # - Do not change these settings unless you know what you're doing!
  pool-settings:

    # Sets the maximum size of the MySQL connection pool.
    # - Basically this value will determine the maximum number of actual
    #   connections to the database backend.
    # - More information about determining the size of connection pools can be found here:
    #   https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
    maximum-pool-size: 10

    # Sets the minimum number of idle connections that the pool will try to maintain.
    # - For maximum performance and responsiveness to spike demands, it is recommended to not set
    #   this value and instead allow the pool to act as a fixed size connection pool.
    #   (set this value to the same as 'maximum-pool-size')
    minimum-idle: 10

    # This setting controls the maximum lifetime of a connection in the pool in milliseconds.
    # - The value should be at least 30 seconds less than any database or infrastructure imposed
    #   connection time limit.
    maximum-lifetime: 1800000 # 30 minutes

    # This setting controls how frequently the pool will 'ping' a connection in order to prevent it
    # from being timed out by the database or network infrastructure, measured in milliseconds.
    # - The value should be less than maximum-lifetime and greater than 30000 (30 seconds).
    # - Setting the value to zero will disable the keepalive functionality.
    keepalive-time: 0

    # This setting controls the maximum number of milliseconds that the plugin will wait for a
    # connection from the pool, before timing out.
    connection-timeout: 5000 # 5 seconds

    # This setting allows you to define extra properties for connections.
    #
    # By default, the following options are set to enable utf8 encoding. (you may need to remove
    # these if you are using PostgreSQL)
    #   useUnicode: true
    #   characterEncoding: utf8
    #
    # You can also use this section to disable SSL connections, by uncommenting the 'useSSL' and
    # 'verifyServerCertificate' options below.
    properties:
      useUnicode: true
      characterEncoding: utf8
      #useSSL: false
      #verifyServerCertificate: false

  # The prefix for all FloraCore SQL tables.
  #
  # - This only applies for remote SQL storage types (MySQL, MariaDB, etc).
  # - Change this if you want to use different tables for different servers.
  table-prefix: 'floracore_'

  # The prefix to use for all FloraCore MongoDB collections.
  #
  # - This only applies for the MongoDB storage type.
  # - Change this if you want to use different collections for different servers. The default is no
  # prefix.
  mongodb-collection-prefix: ''

  # The connection string URI to use to connect to the MongoDB instance.
  #
  # - When configured, this setting will override anything defined in the address, database,
  #   username or password fields above.
  # - If you have a connection string that starts with 'mongodb://' or 'mongodb+srv://', enter it
  #   below.
  # - For more information, please see https://docs.mongodb.com/manual/reference/connection-string/
  mongodb-connection-uri: ''

# Settings for Redis.
# Port 6379 is used by default; set address to "host:port" if differs
redis:
  enabled: false
  address: localhost
  username: ''
  password: ''

# 定义插件应该使用哪个消息传递服务。
#
# - 如果启用和配置,FloraCore将使用消息服务通知其他连接的服务器。
# - 数据不使用此服务存储。它仅用作消息传递平台。
#
# - 可能的选项:
#   => sql       使用sql数据库组成队列系统进行通信。仅当 “存储方法” 设置为MySQL或MariaDB时才起作用。
#                如果选项设置为 “auto” 并且正在使用SQL存储,则默认选择此选项。
#   => redis     使用Redis pub-sub推送更改。你的服务器连接信息必须在下面配置。
#   => custom    使用使用FloraCore API提供的消息服务。
#   => auto      尝试使用redis或sql自动设置消息服务。
messaging-service: auto

# 如果FloraCore应该自动安装翻译包并定期更新它们。
auto-install-translations: true

server:
  name: "global"
  type: "lobby"

check-update: true

bytebin-url: https://bytebin.floracore.cc/
bytesocks-host: bytesocks.floracore.cc
chat-viewer-url: https://chat.floracore.cc

# 是否自定义FloraCore消息的前缀
custom-prefix:
  # 若为是，则在下方填写新的前缀
  enable: false
  text: "&7[&bF&eC&7]"